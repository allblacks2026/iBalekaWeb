@model iBalekaWeb.Models.EventViewModels.EventViewModel
@using iBalekaWeb.Models.EventViewModels
<style>
    body {
        overflow-y: visible;
    }
</style>

@{
    ViewData["Title"] = "Event Details";


}

<div class="container">
    <div>
        <h2 class="center-align">@ViewData["Title"]</h2>
    </div>

    <div class="row">
        <div class="col s6 left-align">
            <h5 class="left-align">Event Details</h5>
            <div class="row">
                @Html.LabelFor(model => model.EventId, "Event ID", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.EventId)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.UserID, "User ID", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.UserID)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Title, "Title", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Title)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Description, "Description", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Description)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Date, "Date", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Date)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Time, "Time", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Time)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.Location, "Location", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.Location)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.DateCreated, "DateCreated", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.DateCreated)</span>
            </div>
            <div class="row">
                @Html.LabelFor(model => model.DateModified, "DateModified", new { @class = "right-align flow-text" }):
                <span class="left-align flow-text">@Html.DisplayFor(model => model.DateModified)</span>
            </div>
        </div>
        <div class="col s6 center-align">
            <h5>Event Routes</h5>
            <div class="row">
                <ul class="collection">
                    @if (Model.EventRoutes.Count > 0)
                    {
                        foreach (EventRouteViewModel item in Model.EventRoutes)
                        {
                            string totalDistance = "";
                            //total distance conversion
                            if (item.Distance > 999)
                            {
                                totalDistance = Math.Round((item.Distance / 1000), 2).ToString() + "km";
                            }
                            else
                            {
                                totalDistance = item.Distance.ToString() + "m";
                            }
                            <li class="collection-item avatar">
                                <div class="title">
                                    @Html.ActionLink(item.Title, "EditRoute", new { id = item.RouteId }, new { @class = "red-text text-darken-2" })

                                </div>
                                <p>
                                    <a class="badge">
                                        @totalDistance


                                    </a>
                                </p>
                            </li>
                        }
                    }

                </ul>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col s4 left-align ">
            <a class="btn waves-effect waves-light btn-large red accent-3" asp-action="Events">
                Back to List
            </a>
        </div>
        <div class="col s4 center-align ">
            @Html.ActionLink("Edit", "EditEvent", new { id = Model.EventId }, new { @class = "btn waves-effect waves-light btn-large red accent-3" })

        </div>
        <div class="col s4 right-align ">
            @Html.ActionLink("Delete", "DeleteEvent", new { id = Model.EventId }, new { @class = "btn waves-effect waves-light btn-large red accent-3" })
        </div>
    </div>
</div>

@*<div class="mdl-grid">
        <div class="mdl-cell mdl-cell--12-col ">
            <div class="mdl-grid">
                <div class="mdl-layout-spacer"></div>
                <div class="mdl-cell mdl-cell--5-col">
                    <div class="mdl-typography--headline" style="text-align:center;">Event Details for @Model.Title</div>
                    <hr />
                    <div class="mdl-grid">
                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.EventId, "Event ID", new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.EventId)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.UserID, "User ID", new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.UserID)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.Title, "Title", new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.Title)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                           @Html.LabelFor(model => model.Description, "Description", new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.Description)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.Date, new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.Date)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.Time, new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.Time)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.Location, "Location"):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.Location)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.DateCreated, "Date Created", new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.DateCreated)</span>
                        </div>

                    </div>
                    <div class="mdl-grid">

                        <div class="mdl-cell mdl-cell--12-col textDisplay" style="margin-top: -2%;">
                            @Html.LabelFor(model => model.DateModified, "Date Modified", new { @class = "control-label" }):
                            <span class="padDisplayLeft">@Html.DisplayFor(model => model.DateModified)</span>
                        </div>

                    </div>

                </div>
                <div class="mdl-layout-spacer"></div>
                <br />
                <div class="mdl-cell mdl-cell--6-col">
                    <div class="mdl-typography--headline" style="text-align:center;">Event Routes</div>
                    <hr />
                    <div class="mdl-grid">
                        <div class="mdl-layout-spacer"></div>
                        <ul class="list-group mdl-cell mdl-cell--4-col mdl-cell--8-col-desktop mdl-cell--12-col-tablet mdl-cell--12-col-phone mdl-card mdl-shadow--3dp">
                            @foreach (var item in Model.EventRoutes)
                            {
                                string totalDistance = "";
                                //total distance conversion
                                if (item.Distance > 999)
                                {
                                    totalDistance = Math.Round((item.Distance / 1000), 2).ToString() + "km";
                                }
                                else
                                {
                                    totalDistance = item.Distance.ToString() + "m";
                                }
                            <li class="list-group-item">
                                <span class="badge">
                                    @totalDistance
                                </span>

                                @Html.ActionLink(@item.Title, "EditRoute","Map", new { id = @item.RouteId })
                            </li>

                            }
                        </ul>
                        <div class="mdl-layout-spacer"></div>
                    </div>
                    <div class="mdl-layout-spacer"></div>
                </div>

            </div>
            <div class="mdl-grid evntButtons">
                <div class="mdl-layout-spacer"></div>
                <div class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">
                    <a class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" asp-action="Events">
                        Back to List
                    </a>
                </div>
                <div class="mdl-layout-spacer"></div>
                <div class="mdl-layout-spacer"></div>
                <div class="mdl-cell mdl-cell--3-col mdl-cell--4-col-tablet mdl-cell--2-col-phone">
                    @Html.ActionLink("Edit", "EditEvent", new { id = Model.EventId }, new { @class = "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" })
                </div>
                <div class="mdl-layout-spacer"></div>
                <div class="form-group mdl-cell mdl-cell--3-col mdl-cell--2-col-tablet mdl-cell--1-col-phone">
                    @Html.ActionLink("Delete", "DeleteEvent", new { id = Model.EventId}, new { @class = "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" })
                </div>

            </div>
        </div>
    </div>*@

